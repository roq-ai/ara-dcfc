generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar
  address     String?  @db.VarChar(200)
  website     String?  @db.VarChar(100)
  industry    String?  @db.VarChar(100)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team        team[]
}

model contractor {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  contract_start_date DateTime? @db.Timestamp(6)
  contract_end_date   DateTime? @db.Timestamp(6)
  hourly_rate         Int?
  max_hours_per_week  Int?
  user_id             String    @db.Uuid
  created_at          DateTime  @default(now()) @db.Timestamp(6)
  updated_at          DateTime  @default(now()) @db.Timestamp(6)
  user                user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model employee {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  hire_date        DateTime? @db.Timestamp(6)
  termination_date DateTime? @db.Timestamp(6)
  salary           Int?
  position         String?   @db.VarChar(100)
  user_id          String    @db.Uuid
  created_at       DateTime  @default(now()) @db.Timestamp(6)
  updated_at       DateTime  @default(now()) @db.Timestamp(6)
  user             user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model hr_manager {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  hire_date        DateTime? @db.Timestamp(6)
  termination_date DateTime? @db.Timestamp(6)
  salary           Int?
  position         String?   @db.VarChar(100)
  user_id          String    @db.Uuid
  created_at       DateTime  @default(now()) @db.Timestamp(6)
  updated_at       DateTime  @default(now()) @db.Timestamp(6)
  user             user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String   @db.VarChar(100)
  description  String?  @db.VarChar
  team_lead_id String   @db.Uuid
  company_id   String   @db.Uuid
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  company      company  @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user     @relation(fields: [team_lead_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  company     company[]
  contractor  contractor[]
  employee    employee[]
  hr_manager  hr_manager[]
  team        team[]
}
